/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HunterZHunter, HunterZHunterInterface } from "../HunterZHunter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "huntId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageReference",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "target",
        type: "string",
      },
    ],
    name: "HuntAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "huntId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
    ],
    name: "PrizeWon",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "huntId",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "imageReference",
        type: "string",
      },
      {
        internalType: "string",
        name: "target",
        type: "string",
      },
    ],
    name: "addHunt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "huntId",
        type: "string",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verifyAndAwardPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200114c3803806200114c833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b610fe1806200016b6000396000f3fe60806040526004361061003f5760003560e01c80632b7ac3f31461004457806348136ecc1461006f578063708e2853146100985780638da5cb5b146100b4575b600080fd5b34801561005057600080fd5b506100596100df565b60405161006691906104f3565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610735565b610105565b005b6100b260048036038101906100ad91906107f6565b61022d565b005b3480156100c057600080fd5b506100c96103ed565b6040516100d69190610930565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806101128484610411565b9150915081610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906109a8565b60405180910390fd5b60006002866040516101689190610a42565b9081526020016040518091039020600301549050600060028760405161018e9190610a42565b9081526020016040518091039020600301819055508473ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101e9573d6000803e3d6000fd5b507fe31b9173645f67fc802cc3e3cd155ebd5da61367196de64d4efbfd87e7118e7d86868360405161021d93929190610aa1565b60405180910390a1505050505050565b60038660405161023d9190610a42565b908152602001604051809103902060009054906101000a900460ff1615610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610b51565b60405180910390fd5b600034116102dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d390610bbd565b60405180910390fd5b60006002876040516102ee9190610a42565b908152602001604051809103902090508681600001908161030f9190610de9565b50858160010190816103219190610de9565b50848160020190816103339190610de9565b50348160030181905550838160040181905550828160050190816103579190610de9565b50818160060190816103699190610de9565b50600160038860405161037c9190610a42565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f16dfca623eff0e602c550df792e47c93c37bcc0d78811849a75bf8ae4380710e878787348888886040516103dc9796959493929190610ebb565b60405180910390a150505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560405161045f9190610f94565b6000604051808303816000865af19150503d806000811461049c576040519150601f19603f3d011682016040523d82523d6000602084013e6104a1565b606091505b509150915081935050509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104dd826104b2565b9050919050565b6104ed816104d2565b82525050565b600060208201905061050860008301846104e4565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105758261052c565b810181811067ffffffffffffffff821117156105945761059361053d565b5b80604052505050565b60006105a761050e565b90506105b3828261056c565b919050565b600067ffffffffffffffff8211156105d3576105d261053d565b5b6105dc8261052c565b9050602081019050919050565b82818337600083830152505050565b600061060b610606846105b8565b61059d565b90508281526020810184848401111561062757610626610527565b5b6106328482856105e9565b509392505050565b600082601f83011261064f5761064e610522565b5b813561065f8482602086016105f8565b91505092915050565b610671816104d2565b811461067c57600080fd5b50565b60008135905061068e81610668565b92915050565b600067ffffffffffffffff8211156106af576106ae61053d565b5b6106b88261052c565b9050602081019050919050565b60006106d86106d384610694565b61059d565b9050828152602081018484840111156106f4576106f3610527565b5b6106ff8482856105e9565b509392505050565b600082601f83011261071c5761071b610522565b5b813561072c8482602086016106c5565b91505092915050565b60008060006060848603121561074e5761074d610518565b5b600084013567ffffffffffffffff81111561076c5761076b61051d565b5b6107788682870161063a565b93505060206107898682870161067f565b925050604084013567ffffffffffffffff8111156107aa576107a961051d565b5b6107b686828701610707565b9150509250925092565b6000819050919050565b6107d3816107c0565b81146107de57600080fd5b50565b6000813590506107f0816107ca565b92915050565b60008060008060008060c0878903121561081357610812610518565b5b600087013567ffffffffffffffff8111156108315761083061051d565b5b61083d89828a0161063a565b965050602087013567ffffffffffffffff81111561085e5761085d61051d565b5b61086a89828a0161063a565b955050604087013567ffffffffffffffff81111561088b5761088a61051d565b5b61089789828a0161063a565b94505060606108a889828a016107e1565b935050608087013567ffffffffffffffff8111156108c9576108c861051d565b5b6108d589828a0161063a565b92505060a087013567ffffffffffffffff8111156108f6576108f561051d565b5b61090289828a0161063a565b9150509295509295509295565b600061091a826104b2565b9050919050565b61092a8161090f565b82525050565b60006020820190506109456000830184610921565b92915050565b600082825260208201905092915050565b7f50726f6f66206e6f742076657269666965640000000000000000000000000000600082015250565b600061099260128361094b565b915061099d8261095c565b602082019050919050565b600060208201905081810360008301526109c181610985565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156109fc5780820151818401526020810190506109e1565b83811115610a0b576000848401525b50505050565b6000610a1c826109c8565b610a2681856109d3565b9350610a368185602086016109de565b80840191505092915050565b6000610a4e8284610a11565b915081905092915050565b6000610a64826109c8565b610a6e818561094b565b9350610a7e8185602086016109de565b610a878161052c565b840191505092915050565b610a9b816107c0565b82525050565b60006060820190508181036000830152610abb8186610a59565b9050610aca60208301856104e4565b610ad76040830184610a92565b949350505050565b7f68756e7420776974682070726f766964656420696420616c726561647920657860008201527f6973747300000000000000000000000000000000000000000000000000000000602082015250565b6000610b3b60248361094b565b9150610b4682610adf565b604082019050919050565b60006020820190508181036000830152610b6a81610b2e565b9050919050565b7f7072697a652063616e6e6f74206265207a65726f000000000000000000000000600082015250565b6000610ba760148361094b565b9150610bb282610b71565b602082019050919050565b60006020820190508181036000830152610bd681610b9a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c2457607f821691505b602082108103610c3757610c36610bdd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c9f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c62565b610ca98683610c62565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ce6610ce1610cdc846107c0565b610cc1565b6107c0565b9050919050565b6000819050919050565b610d0083610ccb565b610d14610d0c82610ced565b848454610c6f565b825550505050565b600090565b610d29610d1c565b610d34818484610cf7565b505050565b5b81811015610d5857610d4d600082610d21565b600181019050610d3a565b5050565b601f821115610d9d57610d6e81610c3d565b610d7784610c52565b81016020851015610d86578190505b610d9a610d9285610c52565b830182610d39565b50505b505050565b600082821c905092915050565b6000610dc060001984600802610da2565b1980831691505092915050565b6000610dd98383610daf565b9150826002028217905092915050565b610df2826109c8565b67ffffffffffffffff811115610e0b57610e0a61053d565b5b610e158254610c0c565b610e20828285610d5c565b600060209050601f831160018114610e535760008415610e41578287015190505b610e4b8582610dcd565b865550610eb3565b601f198416610e6186610c3d565b60005b82811015610e8957848901518255600182019150602085019450602081019050610e64565b86831015610ea65784890151610ea2601f891682610daf565b8355505b6001600288020188555050505b505050505050565b600060e0820190508181036000830152610ed5818a610a59565b90508181036020830152610ee98189610a59565b90508181036040830152610efd8188610a59565b9050610f0c6060830187610a92565b610f196080830186610a92565b81810360a0830152610f2b8185610a59565b905081810360c0830152610f3f8184610a59565b905098975050505050505050565b600081519050919050565b600081905092915050565b6000610f6e82610f4d565b610f788185610f58565b9350610f888185602086016109de565b80840191505092915050565b6000610fa08284610f63565b91508190509291505056fea2646970667358221220a59b8cd92040b3c5b1a54d453c3180021c59b1eb5e56c8ddd79c43a8eaaaf35d64736f6c634300080f0033";

type HunterZHunterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HunterZHunterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HunterZHunter__factory extends ContractFactory {
  constructor(...args: HunterZHunterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HunterZHunter> {
    return super.deploy(_verifier, overrides || {}) as Promise<HunterZHunter>;
  }
  override getDeployTransaction(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override attach(address: string): HunterZHunter {
    return super.attach(address) as HunterZHunter;
  }
  override connect(signer: Signer): HunterZHunter__factory {
    return super.connect(signer) as HunterZHunter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HunterZHunterInterface {
    return new utils.Interface(_abi) as HunterZHunterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HunterZHunter {
    return new Contract(address, _abi, signerOrProvider) as HunterZHunter;
  }
}
